import { Component, OnInit, ViewChild } from '@angular/core';
import { ChartDataSets, ChartOptions } from 'chart.js';
import { Color, Label } from 'ng2-charts';
import {SolrService} from '../../../../../solr.service';

@Component({
  selector: 'app-line-chart',
  templateUrl: './line-chart.component.html'
})
//2021-09-23
//2020-03-13
//2021-09-22T22:00:00Z
export class LineChartComponent implements OnInit {
  line="line";
  poiData=[];
  poiLabel=[];
  poiFilter='';
  usaCovid=[238107, 230264, 229123, 223664, 204978, 174551, 244737, 257982, 270486, 293562, 254822, 222512, 204220, 218477, 228245, 223721, 239147, 212242, 182126, 151010, 151266, 188727, 188829, 189501, 164024, 143076, 133656, 147590, 159544, 156406, 163949, 136758, 111166, 128325, 122226, 110183, 124836, 125057, 107779, 91225, 82139, 91810, 99147, 98819, 97636, 84228, 66274, 57580, 57765, 64420, 68525, 72933, 65856, 55527, 56177, 70919, 72698, 71802, 73359, 67613, 51485, 50915, 55072, 65559, 65479, 63876, 57125, 43387, 42905, 54314, 61853, 60370, 62622, 53185, 47034, 43383, 52008, 62015, 62630, 61928, 58065, 44701, 48405, 58371, 66882, 65974, 76410, 62725, 52443, 57642, 61999, 70958, 73640, 68888, 65062, 44088, 56702, 62808, 76833, 74260, 77946, 66950, 52400, 61630, 71708, 71240, 73366, 69779, 76697, 48126, 35425, 58374, 62986, 60616, 63606, 51196, 39895, 30532, 50646, 54489, 56176, 54680, 47498, 36234, 33015, 42976, 44736, 42861, 44198, 36564, 27011, 24677, 33469, 35581, 40757, 35187, 29473, 20808, 19460, 27940, 27664, 27699, 28090, 21966, 15622, 16061, 23654, 23516, 22397, 24275, 16038, 11927, 8961, 8860, 16090, 18543, 18521, 14696, 10905, 9943, 14515, 19451, 15964, 13953, 12395, 8543, 8255, 12787, 13102, 13179, 11958, 12345, 8892, 8628, 13416, 13782, 15470, 15036, 13115, 10476, 10656, 15692, 11513, 18617, 16769, 12948, 10263, 9197, 20153, 22679, 183774, 27503, 20356, 16663, 29301, 34735, 38358, 40446, 42181, 31320, 28234, 45647, 50921, 61310, 72791, 68434, 53000, 43001, 71454, 85999, 89110, 99005, 104524, 80917, 62394, 103437, 110489, 123176, 128316, 133208, 119154, 96352, 93675, 136144, 143669, 150444, 145636, 138012, 110015, 110031, 150723, 168791, 173838, 166853, 142398, 126262, 117197, 163085, 176881, 186214, 182049, 150782, 117770, 134281, 176728, 198462, 181575, 182377, 141796, 124539, 110433, 117808, 170752, 186267, 169141, 153122, 115892, 113637, 162283, 163260, 167233, 157616, 123241, 96813, 93480, 135126, 132520, 136553, 133464, 95936, 76978, 103794];
  indiaCovid=[20035, 19079, 18177, 16504, 16375, 18088, 20346, 18139, 18222, 18645, 16311, 12584, 15968, 16946, 15590, 15158, 15144, 13788, 10064, 13823, 15223, 14545, 14256, 14849, 13203, 9102, 12689, 11666, 18855, 13083, 13052, 11427, 8635, 11039, 12899, 12408, 11713, 12059, 11831, 9110, 11067, 12923, 9309, 12143, 12194, 11649, 9121, 11610, 12881, 13193, 13993, 14264, 14199, 10584, 13742, 16738, 16577, 16488, 16752, 15510, 12286, 14989, 17407, 16838, 18327, 18711, 18599, 15388, 17921, 22854, 23285, 24882, 25320, 26291, 24492, 28903, 35871, 39726, 40953, 43846, 46951, 40715, 47262, 53476, 59118, 62258, 62714, 68020, 56211, 53480, 72330, 81466, 89129, 93249, 103558, 96982, 115736, 126789, 131968, 145384, 152879, 168912, 161736, 184372, 200739, 217353, 234692, 261500, 273810, 259170, 295041, 314835, 332730, 346786, 349691, 352991, 323144, 360960, 379257, 386452, 401993, 392488, 368147, 357229, 382315, 412262, 414188, 401078, 403738, 366161, 329942, 348421, 362727, 343144, 326098, 311170, 281386, 263533, 267334, 276110, 259551, 257299, 240842, 222315, 196427, 208921, 211298, 186364, 173790, 165553, 152734, 127510, 132788, 134154, 132364, 120529, 114460, 100636, 86498, 92596, 94052, 91702, 84332, 80834, 70421, 60471, 62224, 67208, 62480, 60753, 58419, 53256, 42640, 50848, 54069, 51667, 48698, 50040, 46148, 37566, 45951, 48786, 46617, 44111, 43071, 39796, 34703, 43733, 45892, 43393, 42766, 41506, 37154, 32906, 38792, 41806, 38949, 38079, 41157, 38164, 30093, 42015, 41383, 35342, 39097, 39742, 39361, 29689, 43654, 43509, 44230, 41649, 41831, 40134, 30549, 42625, 42982, 44643, 38628, 39070, 35499, 28204, 38353, 41195, 40120, 38667, 36083, 32937, 25166, 35178, 36401, 36571, 34457, 30948, 25072, 25467, 37593, 46164, 44658, 46759, 45083, 42909, 30941, 41965, 47092, 45352, 42618, 42766, 38948, 31222, 37875, 43263, 34973, 33376, 28591, 27254, 25404, 27176, 30570, 34403, 35662, 30773, 30256, 26115, 26964, 31923, 31382, 29616, 28326, 26041, 18795, 18870];
  MexicoCovid=[14728, 12083, 3361, 6916, 5184, 18238, 18745, 18419, 18706, 18627, 9829, 5607, 20815, 19545, 18480, 18272, 17456, 9449, 5260, 19431, 18846, 17424, 16877, 16420, 8734, 4720, 18017, 17001, 14939, 14051, 12386, 6806, 3693, 4685, 13486, 11972, 10925, 10209, 5322, 2759, 11657, 9305, 8624, 7865, 7680, 4005, 2169, 8263, 7736, 7038, 6958, 6749, 3431, 2049, 8594, 7451, 6813, 6740, 6843, 3516, 2107, 8630, 6924, 6538, 6303, 5994, 3074, 2001, 7043, 5939, 5484, 5316, 5204, 2679, 1568, 2147, 6688, 5223, 4969, 4712, 2442, 1547, 5869, 5126, 4542, 4517, 4105, 2248, 1316, 5203, 4356, 3977, 2085, 1691, 1604, 1427, 5504, 4596, 4357, 4169, 3963, 2221, 1206, 4957, 4129, 3752, 3696, 3272, 1675, 1103, 4236, 3556, 3525, 3171, 3105, 1737, 1063, 3872, 3404, 3092, 2928, 2677, 999, 950, 3411, 2883, 2549, 2750, 2451, 1274, 782, 1724, 3109, 2580, 2310, 2428, 1207, 763, 2822, 2515, 2419, 2343, 2312, 1150, 801, 2895, 2646, 2578, 2472, 2441, 1143, 932, 3027, 2785, 2784, 2642, 2756, 1357, 844, 3674, 3583, 3367, 3246, 3249, 1714, 1099, 4158, 3849, 3917, 3916, 3942, 2062, 1275, 5250, 5142, 5282, 5297, 5177, 2750, 1699, 6903, 6370, 6177, 6419, 6677, 3463, 2255, 9170, 9206, 9924, 9921, 10401, 5312, 3512, 13789, 13814, 13746, 13403, 13924, 6894, 4674, 17960, 18073, 17718, 18633, 17805, 8711, 6376, 22520, 21869, 20432, 21118, 19833, 9349, 7283, 23321, 22711, 21444, 21693, 21010, 10043, 7538, 25335, 24427, 22910, 22036, 21308, 9446, 6761, 24082, 21664, 20754, 18831, 17875, 7644, 5879, 21059, 18598, 17058, 16112, 15635, 7025, 4788, 17580, 15455, 14487, 13682, 13256, 6378, 4178, 15820, 13157, 11978, 11810, 11536, 5115, 3699, 13533, 11432, 7431, 3793, 11429, 4598, 3180, 12271, 9921, 9576, 8524, 8343, 3728, 2685, 10033];
  
  public lineChartData: ChartDataSets[] = [{ data: [], label: 'Covid Cases', yAxisID: 'y-axis-1' },
                                   { data: [],label: 'Tweets' }];


  public lineChartLabels: Label[] = ["1-Jan", "2-Jan", "3-Jan", "4-Jan", "5-Jan", "6-Jan", "7-Jan", "8-Jan", "9-Jan", "10-Jan", "11-Jan", "12-Jan", "13-Jan", "14-Jan", "15-Jan", "16-Jan", "17-Jan", "18-Jan", "19-Jan", "20-Jan", "21-Jan", "22-Jan", "23-Jan", "24-Jan", "25-Jan", "26-Jan", "27-Jan", "28-Jan", "29-Jan", "30-Jan", "31-Jan", "1-Feb", "2-Feb", "3-Feb", "4-Feb", "5-Feb", "6-Feb", "7-Feb", "8-Feb", "9-Feb", "10-Feb", "11-Feb", "12-Feb", "13-Feb", "14-Feb", "15-Feb", "16-Feb", "17-Feb", "18-Feb", "19-Feb", "20-Feb", "21-Feb", "22-Feb", "23-Feb", "24-Feb", "25-Feb", "26-Feb", "27-Feb", "28-Feb", "1-Mar", "2-Mar", "3-Mar", "4-Mar", "5-Mar", "6-Mar", "7-Mar", "8-Mar", "9-Mar", "10-Mar", "11-Mar", "12-Mar", "13-Mar", "14-Mar", "15-Mar", "16-Mar", "17-Mar", "18-Mar", "19-Mar", "20-Mar", "21-Mar", "22-Mar", "23-Mar", "24-Mar", "25-Mar", "26-Mar", "27-Mar", "28-Mar", "29-Mar", "30-Mar", "31-Mar", "1-Apr", "2-Apr", "3-Apr", "4-Apr", "5-Apr", "6-Apr", "7-Apr", "8-Apr", "9-Apr", "10-Apr", "11-Apr", "12-Apr", "13-Apr", "14-Apr", "15-Apr", "16-Apr", "17-Apr", "18-Apr", "19-Apr", "20-Apr", "21-Apr", "22-Apr", "23-Apr", "24-Apr", "25-Apr", "26-Apr", "27-Apr", "28-Apr", "29-Apr", "30-Apr", "1-May", "2-May", "3-May", "4-May", "5-May", "6-May", "7-May", "8-May", "9-May", "10-May", "11-May", "12-May", "13-May", "14-May", "15-May", "16-May", "17-May", "18-May", "19-May", "20-May", "21-May", "22-May", "23-May", "24-May", "25-May", "26-May", "27-May", "28-May", "29-May", "30-May", "31-May", "1-Jun", "2-Jun", "3-Jun", "4-Jun", "5-Jun", "6-Jun", "7-Jun", "8-Jun", "9-Jun", "10-Jun", "11-Jun", "12-Jun", "13-Jun", "14-Jun", "15-Jun", "16-Jun", "17-Jun", "18-Jun", "19-Jun", "20-Jun", "21-Jun", "22-Jun", "23-Jun", "24-Jun", "25-Jun", "26-Jun", "27-Jun", "28-Jun", "29-Jun", "30-Jun", "1-Jul", "2-Jul", "3-Jul", "4-Jul", "5-Jul", "6-Jul", "7-Jul", "8-Jul", "9-Jul", "10-Jul", "11-Jul", "12-Jul", "13-Jul", "14-Jul", "15-Jul", "16-Jul", "17-Jul", "18-Jul", "19-Jul", "20-Jul", "21-Jul", "22-Jul", "23-Jul", "24-Jul", "25-Jul", "26-Jul", "27-Jul", "28-Jul", "29-Jul", "30-Jul", "31-Jul", "1-Aug", "2-Aug", "3-Aug", "4-Aug", "5-Aug", "6-Aug", "7-Aug", "8-Aug", "9-Aug", "10-Aug", "11-Aug", "12-Aug", "13-Aug", "14-Aug", "15-Aug", "16-Aug", "17-Aug", "18-Aug", "19-Aug", "20-Aug", "21-Aug", "22-Aug", "23-Aug", "24-Aug", "25-Aug", "26-Aug", "27-Aug", "28-Aug", "29-Aug", "30-Aug", "31-Aug", "1-Sep", "2-Sep", "3-Sep", "4-Sep", "5-Sep", "6-Sep", "7-Sep", "8-Sep", "9-Sep", "10-Sep", "11-Sep", "12-Sep", "13-Sep", "14-Sep", "15-Sep", "16-Sep", "17-Sep", "18-Sep", "19-Sep", "20-Sep", "21-Sep", "22-Sep", "23-Sep", "24-Sep", "25-Sep", "26-Sep", "27-Sep", "28-Sep", "29-Sep"];
  public lineChartOptions: (ChartOptions) = {
    responsive: true,
    elements:{
       point:{
          radius:0,
          hitRadius:0
       }
    },
    scales: {
      // We use this empty structure as a placeholder for dynamic theming.
      xAxes: [{}],
      yAxes: [
        {
          id: 'y-axis-0',
          position: 'left',
        },
        {
          id: 'y-axis-1',
          position: 'right',
          gridLines: {
            color: 'rgba(255,0,0,0.3)',
          },
          ticks: {
            fontColor: 'red',
          }
        }
      ]
    },
  };
  public lineChartColors: Color[] = [
    { // grey
      backgroundColor: 'rgba(148,159,177,0.2)',
      borderColor: 'rgba(255,102,102,1)'
    },
    { // red
      backgroundColor: 'rgba(255,0,0,0.3)',
      borderColor: 'rgba(23,162,184,1)'
    }
  ];
  public lineChartLegend = true;
  public lineChartType = 'line';
  public lineChartPlugins = [];



  constructor(private solrService: SolrService) { }

  ngOnInit() {
  }


  public getPoITweets(){
    console.log(this.poiFilter);
    this.poiData=[];
    this.solrService.getPoIStat(this.poiFilter).subscribe(response => {

       let x = response['facet_counts']['facet_ranges']['tweet_date']['counts'].length;
       for(let i=0;i<x;i++){
         if(i%2!=0)
              this.poiData.push(response['facet_counts']['facet_ranges']['tweet_date']['counts'][i]);
       }

       console.log(this.poiData);
       if(["AOC", "CDCgov", "KamalaHarris", "SpeakerPelosi", "US_FDA", "VP", "tedcruz","HHSGov","NMDOH"].includes(this.poiFilter)){
        this.lineChartData=[{ data: this.usaCovid,label: 'USA Daily New Covid Cases', yAxisID: 'y-axis-1',fill:false },
        { data:this.poiData,label: 'Tweets',fill:false }];
       }

       if(["CovidIndiaSeva", "ICMRDELHI", "KTRTRS", "MamataOfficial", "MoHFW_INDIA", "PMOIndia", "myogiadityanath", "narendramodi", "rajnathsingh"].includes(this.poiFilter)){
        this.lineChartData=[{ data: this.indiaCovid,label: 'India Daily New Covid Cases', yAxisID: 'y-axis-1',fill:false },
        { data:this.poiData,label: 'Tweets',fill:false }];
       }

       if(["GovMLG", "M_OlgaSCordero", "SRE_mx", "SSalud_mx", "gobmx", "lopezobrador_", "m_ebrard"].includes(this.poiFilter)){
        this.lineChartData=[{ data: this.MexicoCovid, pointRadius: 0,pointHitRadius: 0,label: 'Mexico Daily New  Covid Cases', yAxisID: 'y-axis-1',fill:false },
        { data:this.poiData,label: 'Tweets',fill:false }];
       }
     
    });
  }
}
